/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const RulesLazyImport = createFileRoute('/rules')()
const RoundPredictionsLazyImport = createFileRoute('/round-predictions')()
const PredictionsLazyImport = createFileRoute('/predictions')()
const LogoutLazyImport = createFileRoute('/logout')()
const LoginLazyImport = createFileRoute('/login')()
const LeaderboardLazyImport = createFileRoute('/leaderboard')()
const FixturesLazyImport = createFileRoute('/fixtures')()
const DashboardLazyImport = createFileRoute('/dashboard')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()
const AdminIndexLazyImport = createFileRoute('/admin/')()
const ProfileUsernameIndexLazyImport = createFileRoute('/profile/$username/')()
const LeagueLeagueIdIndexLazyImport = createFileRoute('/league/$leagueId/')()
const AdminEntityIndexLazyImport = createFileRoute('/admin/$entity/')()

// Create/Update Routes

const RulesLazyRoute = RulesLazyImport.update({
  path: '/rules',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/rules.lazy').then((d) => d.Route))

const RoundPredictionsLazyRoute = RoundPredictionsLazyImport.update({
  path: '/round-predictions',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/round-predictions.lazy').then((d) => d.Route),
)

const PredictionsLazyRoute = PredictionsLazyImport.update({
  path: '/predictions',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/predictions.lazy').then((d) => d.Route))

const LogoutLazyRoute = LogoutLazyImport.update({
  path: '/logout',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/logout.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const LeaderboardLazyRoute = LeaderboardLazyImport.update({
  path: '/leaderboard',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/leaderboard.lazy').then((d) => d.Route))

const FixturesLazyRoute = FixturesLazyImport.update({
  path: '/fixtures',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/fixtures.lazy').then((d) => d.Route))

const DashboardLazyRoute = DashboardLazyImport.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/dashboard.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const AdminIndexLazyRoute = AdminIndexLazyImport.update({
  path: '/admin/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/admin/index.lazy').then((d) => d.Route))

const ProfileUsernameIndexLazyRoute = ProfileUsernameIndexLazyImport.update({
  path: '/profile/$username/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/profile/$username/index.lazy').then((d) => d.Route),
)

const LeagueLeagueIdIndexLazyRoute = LeagueLeagueIdIndexLazyImport.update({
  path: '/league/$leagueId/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/league/$leagueId/index.lazy').then((d) => d.Route),
)

const AdminEntityIndexLazyRoute = AdminEntityIndexLazyImport.update({
  path: '/admin/$entity/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/admin/$entity/index.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      preLoaderRoute: typeof DashboardLazyImport
      parentRoute: typeof rootRoute
    }
    '/fixtures': {
      preLoaderRoute: typeof FixturesLazyImport
      parentRoute: typeof rootRoute
    }
    '/leaderboard': {
      preLoaderRoute: typeof LeaderboardLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/logout': {
      preLoaderRoute: typeof LogoutLazyImport
      parentRoute: typeof rootRoute
    }
    '/predictions': {
      preLoaderRoute: typeof PredictionsLazyImport
      parentRoute: typeof rootRoute
    }
    '/round-predictions': {
      preLoaderRoute: typeof RoundPredictionsLazyImport
      parentRoute: typeof rootRoute
    }
    '/rules': {
      preLoaderRoute: typeof RulesLazyImport
      parentRoute: typeof rootRoute
    }
    '/admin/': {
      preLoaderRoute: typeof AdminIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/admin/$entity/': {
      preLoaderRoute: typeof AdminEntityIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/league/$leagueId/': {
      preLoaderRoute: typeof LeagueLeagueIdIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/profile/$username/': {
      preLoaderRoute: typeof ProfileUsernameIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  AboutLazyRoute,
  DashboardLazyRoute,
  FixturesLazyRoute,
  LeaderboardLazyRoute,
  LoginLazyRoute,
  LogoutLazyRoute,
  PredictionsLazyRoute,
  RoundPredictionsLazyRoute,
  RulesLazyRoute,
  AdminIndexLazyRoute,
  AdminEntityIndexLazyRoute,
  LeagueLeagueIdIndexLazyRoute,
  ProfileUsernameIndexLazyRoute,
])

/* prettier-ignore-end */
